\relax 
\providecommand\hyper@newdestlabel[2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}\IeC {\'U}vod}{14}{section.1}}
\newlabel{sec:Uvod}{{1}{14}{Úvod}{section.1}{}}
\citation{1}
\citation{2}
\citation{3}
\@writefile{toc}{\contentsline {section}{\numberline {2}Technologie pro tvorbu webov\IeC {\'y}ch aplikac\IeC {\'\i }}{15}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Klient-Server}{15}{subsection.2.1}}
\newlabel{sec:KlientServer}{{2.1}{15}{Klient-Server}{subsection.2.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Topologie s\IeC {\'\i }t\IeC {\v e} klient-server. Na lev\IeC {\'e} stran\IeC {\v e} je serverov\IeC {\'e} prost\IeC {\v r}ed\IeC {\'\i }, kter\IeC {\'e} m\IeC {\r u}\IeC {\v z}e obsahovat v\IeC {\'\i }ce server\IeC {\r u} nebo dal\IeC {\v s}\IeC {\'\i } technologie jako load-balancer, Domain Name Server (d\IeC {\'a}le jen DNS) server, odd\IeC {\v e}len\IeC {\'e} datab\IeC {\'a}zov\IeC {\'e} stroje apod. Serverov\IeC {\'e} prost\IeC {\v r}ed\IeC {\'\i } je odd\IeC {\v e}leno firewallem (s nebo bez r\IeC {\r u}zn\IeC {\'y}ch restrikc\IeC {\'\i }) pro bezpe\IeC {\v c}nost p\IeC {\v r}ed \IeC {\'u}toky. P\IeC {\v r}\IeC {\'\i }choz\IeC {\'\i } po\IeC {\v z}adavky ze s\IeC {\'\i }t\IeC {\v e} p\IeC {\v r}ich\IeC {\'a}zej\IeC {\'\i } p\IeC {\v r}es internet od r\IeC {\r u}zn\IeC {\'y}ch klient\IeC {\r u}. Klientem m\IeC {\r u}\IeC {\v z}e b\IeC {\'y}t cokoliv, co dok\IeC {\'a}\IeC {\v z}e vytvo\IeC {\v r}it a~odeslat spr\IeC {\'a}vn\IeC {\v e} po\IeC {\v z}adavek. Ten je pak obslou\IeC {\v z}en serverem a~vr\IeC {\'a}cen zp\IeC {\v e}t. \relax }}{16}{figure.caption.1}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:ClientServer}{{1}{16}{Topologie sítě klient-server. Na levé straně je serverové prostředí, které může obsahovat více serverů nebo další technologie jako load-balancer, Domain Name Server (dále jen DNS) server, oddělené databázové stroje apod. Serverové prostředí je odděleno firewallem (s nebo bez různých restrikcí) pro bezpečnost před útoky. Příchozí požadavky ze sítě přicházejí přes internet od různých klientů. Klientem může být cokoliv, co dokáže vytvořit a~odeslat správně požadavek. Ten je pak obsloužen serverem a~vrácen zpět. \relax }{figure.caption.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}Zp\IeC {\r u}sob komunikace}{16}{subsubsection.2.1.1}}
\newlabel{sec:zpusobKomunikace}{{2.1.1}{16}{Způsob komunikace}{subsubsection.2.1.1}{}}
\citation{4}
\citation{5}
\citation{6}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Aktivitn\IeC {\'\i } diagram komunikace HTTPS. v~prvn\IeC {\'\i } f\IeC {\'a}zi je vysl\IeC {\'a}n po\IeC {\v z}adavek klienta na p\IeC {\v r}ipojen\IeC {\'\i } zabezpe\IeC {\v c}en\IeC {\'e} str\IeC {\'a}nky. Server pot\IeC {\'e} vrac\IeC {\'\i } certifik\IeC {\'a}t s~ve\IeC {\v r}ejn\IeC {\'y}m kl\IeC {\'\i }\IeC {\v c}em, kter\IeC {\'y} je zpracov\IeC {\'a}n po odesl\IeC {\'a}n\IeC {\'\i } certifika\IeC {\v c}n\IeC {\'\i } autoritou. Klient pot\IeC {\'e} p\IeC {\v r}ij\IeC {\'\i }m\IeC {\'a} odpov\IeC {\v e}\IeC {\v d} (ta je kladn\IeC {\'a} \IeC {\v c}i zam\IeC {\'\i }tav\IeC {\'a}). Klient pak na z\IeC {\'a}klad\IeC {\v e} ve\IeC {\v r}ejn\IeC {\'e}ho kl\IeC {\'\i }\IeC {\v c}e generuje dv\IeC {\v e} kopie rela\IeC {\v c}n\IeC {\'\i }ho kl\IeC {\'\i }\IeC {\v c}e. Tento kl\IeC {\'\i }\IeC {\v c} s~daty (pokud jsou) je pot\IeC {\'e} pomoc\IeC {\'\i } ov\IeC {\v e}\IeC {\v r}en\IeC {\'e}ho ve\IeC {\v r}ejn\IeC {\'e}ho kl\IeC {\'\i }\IeC {\v c}e zakryptov\IeC {\'a}n a~odesl\IeC {\'a}n na server. Ten n\IeC {\'a}sledn\IeC {\v e} de\IeC {\v s}ifruje po\IeC {\v z}adovan\IeC {\'a} data pomoc\IeC {\'\i } sv\IeC {\'e}ho priv\IeC {\'a}tn\IeC {\'\i }ho kl\IeC {\'\i }\IeC {\v c}e. V~p\IeC {\v r}\IeC {\'\i }pad\IeC {\v e} \IeC {\'u}sp\IeC {\v e}chu z\IeC {\'\i }sk\IeC {\'a}v\IeC {\'a} de\IeC {\v s}ifrovan\IeC {\'y} rela\IeC {\v c}n\IeC {\'\i } kl\IeC {\'\i }\IeC {\v c}. T\IeC {\'\i }mto krokem kon\IeC {\v c}\IeC {\'\i } prvn\IeC {\'\i } f\IeC {\'a}ze, kdy se navz\IeC {\'a}jem ov\IeC {\v e}\IeC {\v r}uj\IeC {\'\i } certifik\IeC {\'a}ty. V~druh\IeC {\'e} f\IeC {\'a}zi u\IeC {\v z} prob\IeC {\'\i }h\IeC {\'a} ov\IeC {\v e}\IeC {\v r}en\IeC {\'a} komunikace. Po klientsk\IeC {\'e}m po\IeC {\v z}adavku server odes\IeC {\'\i }l\IeC {\'a} zp\IeC {\v e}t po\IeC {\v z}adovan\IeC {\'a} data za\IeC {\v s}ifrovan\IeC {\'a} pomoc\IeC {\'\i } rela\IeC {\v c}n\IeC {\'\i }ho kl\IeC {\'\i }\IeC {\v c}e. Klient tato data de\IeC {\v s}ifruje s~priv\IeC {\'a}tn\IeC {\'\i }m kl\IeC {\'\i }\IeC {\v c}em a~z\IeC {\'\i }sk\IeC {\'a}v\IeC {\'a} tak de\IeC {\v s}ifrovan\IeC {\'e} \IeC {\'u}daje. V~opa\IeC {\v c}n\IeC {\'e}m sm\IeC {\v e}ru funguje tato f\IeC {\'a}ze stejn\IeC {\v e}. Klient zakryptuje data pomoc\IeC {\'\i } rela\IeC {\v c}n\IeC {\'\i }ho kl\IeC {\'\i }\IeC {\v c}e a~server pot\IeC {\'e} de\IeC {\v s}ifruje data pomoc\IeC {\'\i } sv\IeC {\'e}ho priv\IeC {\'a}tn\IeC {\'\i }ho kl\IeC {\'\i }\IeC {\v c}e.\relax }}{18}{figure.caption.2}}
\newlabel{fig:HTTPS}{{2}{18}{Aktivitní diagram komunikace HTTPS. v~první fázi je vyslán požadavek klienta na připojení zabezpečené stránky. Server poté vrací certifikát s~veřejným klíčem, který je zpracován po odeslání certifikační autoritou. Klient poté přijímá odpověď (ta je kladná či zamítavá). Klient pak na základě veřejného klíče generuje dvě kopie relačního klíče. Tento klíč s~daty (pokud jsou) je poté pomocí ověřeného veřejného klíče zakryptován a~odeslán na server. Ten následně dešifruje požadovaná data pomocí svého privátního klíče. V~případě úspěchu získává dešifrovaný relační klíč. Tímto krokem končí první fáze, kdy se navzájem ověřují certifikáty. V~druhé fázi už probíhá ověřená komunikace. Po klientském požadavku server odesílá zpět požadovaná data zašifrovaná pomocí relačního klíče. Klient tato data dešifruje s~privátním klíčem a~získává tak dešifrované údaje. V~opačném směru funguje tato fáze stejně. Klient zakryptuje data pomocí relačního klíče a~server poté dešifruje data pomocí svého privátního klíče.\relax }{figure.caption.2}{}}
\citation{7}
\citation{8}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}Form\IeC {\'a}ty dat}{19}{subsubsection.2.1.2}}
\citation{9}
\newlabel{lst:rootXML}{{1}{20}{Ukázka kořenového elementu XML dokumentu}{lstlisting.1}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1}Uk\IeC {\'a}zka ko\IeC {\v r}enov\IeC {\'e}ho elementu XML dokumentu.}{20}{lstlisting.1}}
\newlabel{lst:smallAndCapitalLetterXML}{{2}{20}{Malá písmena a~velká písmena v~XML}{lstlisting.2}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2}Mal\IeC {\'a} p\IeC {\'\i }smena a~velk\IeC {\'a} p\IeC {\'\i }smena v~XML}{20}{lstlisting.2}}
\newlabel{lst:parameterXMLs}{{3}{20}{Parametr XML tagu}{lstlisting.3}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3}Parametr XML tagu}{20}{lstlisting.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Z\IeC {\'a}pis objektu v~JSON form\IeC {\'a}tu. Ka\IeC {\v z}d\IeC {\'y} objekt za\IeC {\v c}\IeC {\'\i }n\IeC {\'a} levou slo\IeC {\v z}enou z\IeC {\'a}vorkou. Pot\IeC {\'e} n\IeC {\'a}sleduje vlastnost odd\IeC {\v e}len\IeC {\'a} od jej\IeC {\'\i } hodnoty dvojte\IeC {\v c}kou. Ka\IeC {\v z}d\IeC {\'y} dal\IeC {\v s}\IeC {\'\i } p\IeC {\'a}r vlastnost-hodnota je pot\IeC {\'e} odd\IeC {\v e}lena \IeC {\v c}\IeC {\'a}rkou. V\IeC {\'y}sledn\IeC {\'y} objekt je pot\IeC {\'e} uzav\IeC {\v r}en pravou slo\IeC {\v z}enou z\IeC {\'a}vorkou.\relax }}{21}{figure.caption.3}}
\newlabel{fig:JSONObject}{{3}{21}{Zápis objektu v~JSON formátu. Každý objekt začíná levou složenou závorkou. Poté následuje vlastnost oddělená od její hodnoty dvojtečkou. Každý další pár vlastnost-hodnota je poté oddělena čárkou. Výsledný objekt je poté uzavřen pravou složenou závorkou.\relax }{figure.caption.3}{}}
\citation{10}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Z\IeC {\'a}pis pole v~JSON form\IeC {\'a}tu. Ka\IeC {\v z}d\IeC {\'e} JSON pole je ohrani\IeC {\v c}en\IeC {\'e} hranat\IeC {\'y}mi z\IeC {\'a}vorkami. Pole m\IeC {\r u}\IeC {\v z}e obsahovat nula a~v\IeC {\'\i }c hodnot, kter\IeC {\'e} jsou odd\IeC {\v e}leny navz\IeC {\'a}jem \IeC {\v c}\IeC {\'a}rkou. \relax }}{22}{figure.caption.4}}
\newlabel{fig:JSONArray}{{4}{22}{Zápis pole v~JSON formátu. Každé JSON pole je ohraničené hranatými závorkami. Pole může obsahovat nula a~víc hodnot, které jsou odděleny navzájem čárkou. \relax }{figure.caption.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Webov\IeC {\'e} technologie}{22}{subsection.2.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}HTML \IeC {\textendash } Hypertext Markup Language}{22}{subsubsection.2.2.1}}
\newlabel{sec:HTML}{{2.2.1}{22}{HTML – Hypertext Markup Language}{subsubsection.2.2.1}{}}
\citation{11}
\citation{12}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Grafick\IeC {\'e} rozlo\IeC {\v z}en\IeC {\'\i } HTML elementu. Ka\IeC {\v z}d\IeC {\'y} HTML tag je uvozen po\IeC {\v c}\IeC {\'a}te\IeC {\v c}n\IeC {\'\i }m a~koncov\IeC {\'y}m tagem, p\IeC {\v r}i\IeC {\v c}em\IeC {\'y} koncov\IeC {\'y} tag obsahuje lom\IeC {\'\i }tko p\IeC {\v r}ed n\IeC {\'a}zvem elementu. Mezi HTML tagy je pak dan\IeC {\'y} obsah.\relax }}{23}{figure.caption.5}}
\newlabel{fig:HTMLElement}{{5}{23}{Grafické rozložení HTML elementu. Každý HTML tag je uvozen počátečním a~koncovým tagem, přičemý koncový tag obsahuje lomítko před názvem elementu. Mezi HTML tagy je pak daný obsah.\relax }{figure.caption.5}{}}
\newlabel{lst:HTML}{{4}{23}{Ukázka HTML dokumentu}{lstlisting.4}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4}Uk\IeC {\'a}zka HTML dokumentu.}{23}{lstlisting.4}}
\citation{11}
\citation{12}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.2}CSS}{24}{subsubsection.2.2.2}}
\newlabel{sec:CSS}{{2.2.2}{24}{CSS}{subsubsection.2.2.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Na\IeC {\v c}ten\IeC {\'\i } HTML a~CSS prohl\IeC {\'\i }\IeC {\v z}e\IeC {\v c}em. Po na\IeC {\v c}ten\IeC {\'\i } HTML je prohl\IeC {\'\i }\IeC {\v z}e\IeC {\v c}em tento dokument rozebr\IeC {\'a}n p\IeC {\v r}i\IeC {\v c}em\IeC {\v z} zjist\IeC {\'\i } lokaci CSS soubor\IeC {\r u}. Styly jsou pot\IeC {\'e} rozebr\IeC {\'a}ny a~spole\IeC {\v c}n\IeC {\v e} s~HTML je vytvo\IeC {\v r}en DOM, kter\IeC {\'y} je pak ulo\IeC {\v z}en v~pam\IeC {\v e}ti opera\IeC {\v c}n\IeC {\'\i }ho syst\IeC {\'e}mu. Prohl\IeC {\'\i }\IeC {\v z}e\IeC {\v c} pot\IeC {\'e} zobraz\IeC {\'\i } obsah DOMu.\relax }}{26}{figure.caption.6}}
\newlabel{fig:CSSLoad}{{6}{26}{Načtení HTML a~CSS prohlížečem. Po načtení HTML je prohlížečem tento dokument rozebrán přičemž zjistí lokaci CSS souborů. Styly jsou poté rozebrány a~společně s~HTML je vytvořen DOM, který je pak uložen v~paměti operačního systému. Prohlížeč poté zobrazí obsah DOMu.\relax }{figure.caption.6}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.3}JavaScript}{26}{subsubsection.2.2.3}}
\newlabel{sec:JavaScript}{{2.2.3}{26}{JavaScript}{subsubsection.2.2.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Struktura webov\IeC {\'e} aplikace. Na tomto obr\IeC {\'a}zku je zn\IeC {\'a}zorn\IeC {\v e}na stavba a~vrstva jednotliv\IeC {\'y}ch technologi\IeC {\'\i }. Nejspodn\IeC {\v e}j\IeC {\v s}\IeC {\'\i } vrstva HTML zabezpe\IeC {\v c}uje strukturu a~z\IeC {\'a}kladn\IeC {\'\i } kostru webov\IeC {\'e} str\IeC {\'a}nky \IeC {\v c}i aplikace. N\IeC {\'a}sleduje soubor stylu, kter\IeC {\'y} se star\IeC {\'a} o~vzhled dan\IeC {\'e} str\IeC {\'a}nky. Nejv\IeC {\'y}\IeC {\v s}e je polo\IeC {\v z}ena vrstva s~JavaScriptov\IeC {\'y}m k\IeC {\'o}dem, kter\IeC {\'y} m\IeC {\'a} na starosti chov\IeC {\'a}n\IeC {\'\i } aplikace. V\IeC {\v s}echny tyto t\IeC {\v r}i vrstvy dohromady d\IeC {\'a}vaj\IeC {\'\i } stavbu modern\IeC {\'\i } webov\IeC {\'e} str\IeC {\'a}nky.\relax }}{27}{figure.caption.7}}
\newlabel{fig:htmlCssJs}{{7}{27}{Struktura webové aplikace. Na tomto obrázku je znázorněna stavba a~vrstva jednotlivých technologií. Nejspodnější vrstva HTML zabezpečuje strukturu a~základní kostru webové stránky či aplikace. Následuje soubor stylu, který se stará o~vzhled dané stránky. Nejvýše je položena vrstva s~JavaScriptovým kódem, který má na starosti chování aplikace. Všechny tyto tři vrstvy dohromady dávají stavbu moderní webové stránky.\relax }{figure.caption.7}{}}
\citation{13}
\citation{14}
\newlabel{lst:OOP}{{5}{28}{Ukázka OOP v~JavaScriptu}{lstlisting.5}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {5}Uk\IeC {\'a}zka OOP v~JavaScriptu}{28}{lstlisting.5}}
\newlabel{lst:inlineJS}{{6}{29}{Ukázka inline JS kódu}{lstlisting.6}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {6}Uk\IeC {\'a}zka inline JS k\IeC {\'o}du}{29}{lstlisting.6}}
\citation{15}
\newlabel{lst:internalJS}{{7}{30}{Ukázka interního JS kódu}{lstlisting.7}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {7}Uk\IeC {\'a}zka intern\IeC {\'\i }ho JS k\IeC {\'o}du}{30}{lstlisting.7}}
\newlabel{lst:externalJS}{{8}{30}{Ukázka externího JS kódu}{lstlisting.8}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {8}Uk\IeC {\'a}zka extern\IeC {\'\i }ho JS k\IeC {\'o}du}{30}{lstlisting.8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.4}AngularJS}{30}{subsubsection.2.2.4}}
\newlabel{sec:AngularJS}{{2.2.4}{30}{AngularJS}{subsubsection.2.2.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Uk\IeC {\'a}zka dvoucestn\IeC {\'e} synchronizace dat.\relax }}{31}{figure.caption.8}}
\newlabel{fig:ngTwoWayDataBinding1}{{8}{31}{Ukázka dvoucestné synchronizace dat.\relax }{figure.caption.8}{}}
\newlabel{lst:ngTwoWayDataBindingSourceCode}{{9}{31}{Zdrojový kód ukázky obrázku \ref {fig:ngTwoWayDataBinding}}{lstlisting.9}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {9}Zdrojov\IeC {\'y} k\IeC {\'o}d uk\IeC {\'a}zky obr\IeC {\'a}zku \ref  {fig:ngTwoWayDataBinding}}{31}{lstlisting.9}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Grafick\IeC {\'e} zn\IeC {\'a}zorn\IeC {\v e}n\IeC {\'\i } dvoucestn\IeC {\'e} synchronizace dat. Zde je graficky zn\IeC {\'a}zorn\IeC {\v e}n, jak AngularJS zaji\IeC {\v s}\IeC {\v t}uje modifikaci datov\IeC {\'e}ho modelu a~u\IeC {\v z}ivatelsk\IeC {\'e}ho rozhran\IeC {\'\i }. Ve chv\IeC {\'\i }li kdy prob\IeC {\v e}hne zm\IeC {\v e}na v~textov\IeC {\'e}m poli, se text p\IeC {\v r}enese do modelu a~pot\IeC {\'e} se zap\IeC {\'\i }\IeC {\v s}e do \IeC {\v c}\IeC {\'a}sti view. \relax }}{32}{figure.caption.9}}
\newlabel{fig:ngTwoWayDataBinding}{{9}{32}{Grafické znázornění dvoucestné synchronizace dat. Zde je graficky znázorněn, jak AngularJS zajišťuje modifikaci datového modelu a~uživatelského rozhraní. Ve chvíli kdy proběhne změna v~textovém poli, se text přenese do modelu a~poté se zapíše do části view. \relax }{figure.caption.9}{}}
\citation{16}
\citation{17}
\newlabel{lst:ngDependencyInjection}{{10}{33}{Ukázka vkládání závislosti}{lstlisting.10}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {10}Uk\IeC {\'a}zka vkl\IeC {\'a}d\IeC {\'a}n\IeC {\'\i } z\IeC {\'a}vislosti}{33}{lstlisting.10}}
\newlabel{lst:ngDependencyInjectionFix1}{{11}{33}{Vložení závislostí v~poli}{lstlisting.11}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {11}Vlo\IeC {\v z}en\IeC {\'\i } z\IeC {\'a}vislost\IeC {\'\i } v~poli}{33}{lstlisting.11}}
\newlabel{lst:ngDependencyInjectionFix2}{{12}{33}{Vložení závislosti do vlasnosti \textit {\$inject}}{lstlisting.12}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {12}Vlo\IeC {\v z}en\IeC {\'\i } z\IeC {\'a}vislosti do vlasnosti \textit  {\$inject}}{33}{lstlisting.12}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.5}ReactJS}{34}{subsubsection.2.2.5}}
\newlabel{sec:ReactJS}{{2.2.5}{34}{ReactJS}{subsubsection.2.2.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces MVC architektura.\relax }}{35}{figure.caption.10}}
\newlabel{fig:MVC}{{10}{35}{MVC architektura.\relax }{figure.caption.10}{}}
\newlabel{lst:reactComponent}{{13}{36}{Příklad React komponenty}{lstlisting.13}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {13}P\IeC {\v r}\IeC {\'\i }klad React komponenty}{36}{lstlisting.13}}
\newlabel{lst:JSX}{{14}{37}{Ukázka JSX a~jeho transkompilaci}{lstlisting.14}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {14}Uk\IeC {\'a}zka JSX a~jeho transkompilaci.}{37}{lstlisting.14}}
\citation{18}
\citation{19}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Jednosm\IeC {\v e}rn\IeC {\'y} tok dat.\relax }}{39}{figure.caption.11}}
\newlabel{fig:rctOneWayDataFlow}{{11}{39}{Jednosměrný tok dat.\relax }{figure.caption.11}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Technologie serverov\IeC {\'y}ch \IeC {\v c}\IeC {\'a}st\IeC {\'\i } webov\IeC {\'e} aplikace}{39}{subsection.2.3}}
\newlabel{sec:backend}{{2.3}{39}{Technologie serverových částí webové aplikace}{subsection.2.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.1}.NET Web API}{39}{subsubsection.2.3.1}}
\newlabel{sec:dotNET}{{2.3.1}{39}{.NET Web API}{subsubsection.2.3.1}{}}
\citation{RTLS}
\citation{RTLS}
\@writefile{toc}{\contentsline {section}{\numberline {3}Vlastn\IeC {\'\i } n\IeC {\'a}vrh \IeC {\v r}e\IeC {\v s}en\IeC {\'\i }}{42}{section.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Anal\IeC {\'y}za sou\IeC {\v c}asn\IeC {\'e} situace}{42}{subsection.3.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces RTLS sch\IeC {\'e}ma. Kotvy jsou v~RTLS za\IeC {\v r}\IeC {\'\i }zen\IeC {\'\i }, kter\IeC {\'e} cyklicky vys\IeC {\'\i }laj\IeC {\'\i } do sv\IeC {\'e}ho okol\IeC {\'\i } informaci o~sob\IeC {\v e}. Tyto kotvy jsou um\IeC {\'\i }st\IeC {\v e}ny v~ka\IeC {\v z}d\IeC {\'e} m\IeC {\'\i }stnosti minim\IeC {\'a}ln\IeC {\v e} jednou, vys\IeC {\'\i }laj\IeC {\'\i } pomoc\IeC {\'\i } infra\IeC {\v c}erven\IeC {\'e}ho sign\IeC {\'a}lu informace o~tom, ve kter\IeC {\'e} budov\IeC {\v e} se kotva nach\IeC {\'a}z\IeC {\'\i }, m\IeC {\'\i }stnost ve kter\IeC {\'e} je kotva um\IeC {\'\i }st\IeC {\v e}na a~roh m\IeC {\'\i }stnosti. P\IeC {\v r}edpokl\IeC {\'a}d\IeC {\'a} se maxim\IeC {\'a}ln\IeC {\v e} 254 budov a~255 m\IeC {\'\i }stnost\IeC {\'\i }. Je nezbytn\IeC {\'e}, aby na ka\IeC {\v z}d\IeC {\'e} posteli pacienta byl p\IeC {\v r}\IeC {\'\i }tomn\IeC {\'y} tag. Lokaliza\IeC {\v c}n\IeC {\'\i } tagy jsou mal\IeC {\'a} elektronick\IeC {\'a} za\IeC {\v r}\IeC {\'\i }zen\IeC {\'\i }, kter\IeC {\'a} zaji\IeC {\v s}\IeC {\v t}uj\IeC {\'\i } lokalizaci v~hl\IeC {\'\i }dan\IeC {\'e}m prostoru. Tagy sb\IeC {\'\i }raj\IeC {\'\i } data z~IR kotev a~v p\IeC {\v r}\IeC {\'\i }pad\IeC {\v e} pot\IeC {\v r}eb vy\IeC {\v s}lou pot\IeC {\v r}ebn\IeC {\'a} data. Data jsou vys\IeC {\'\i }l\IeC {\'a}na v~p\IeC {\v r}\IeC {\'\i }pad\IeC {\v e} zm\IeC {\v e}n\IeC {\v e} m\IeC {\'\i }stnosti, zm\IeC {\'a}\IeC {\v c}knut\IeC {\'\i } tla\IeC {\v c}\IeC {\'\i }tka na tagu nebo po uplynut\IeC {\'\i } p\IeC {\v e}ti minut po vys\IeC {\'\i }l\IeC {\'a}n\IeC {\'\i }. Tato data jsou n\IeC {\'a}sledn\IeC {\v e} p\IeC {\v r}ij\IeC {\'\i }m\IeC {\'a}na p\IeC {\v r}ij\IeC {\'\i }ma\IeC {\v c}i a~webov\IeC {\'y}m serverem, kter\IeC {\'y} tato data zpracuje a~n\IeC {\'a}sledn\IeC {\v e} ulo\IeC {\v z}\IeC {\'\i } do datab\IeC {\'a}ze. Tato centr\IeC {\'a}ln\IeC {\'\i } datab\IeC {\'a}ze pak obsahuje v\IeC {\v s}echny ud\IeC {\'a}losti, kter\IeC {\'e} byly zaznamen\IeC {\'a}ny tagem. Toto \IeC {\'u}lo\IeC {\v z}i\IeC {\v s}t\IeC {\v e} dat pak vyu\IeC {\v z}\IeC {\'\i }v\IeC {\'a} \IeC {\v s}irok\IeC {\'a} \IeC {\v s}k\IeC {\'a}la aplikac\IeC {\'\i }, konfigura\IeC {\v c}n\IeC {\'\i }ch n\IeC {\'a}stroj\IeC {\r u} i~budouc\IeC {\'\i } statistick\IeC {\'e} vyhodnocov\IeC {\'a}n\IeC {\'\i }. Obr\IeC {\'a}zek a~\IeC {\v c}\IeC {\'a}st textu p\IeC {\v r}evzata z~\cite  {RTLS}.\relax }}{43}{figure.caption.12}}
\newlabel{fig:RTLS}{{12}{43}{RTLS schéma. Kotvy jsou v~RTLS zařízení, které cyklicky vysílají do svého okolí informaci o~sobě. Tyto kotvy jsou umístěny v~každé místnosti minimálně jednou, vysílají pomocí infračerveného signálu informace o~tom, ve které budově se kotva nachází, místnost ve které je kotva umístěna a~roh místnosti. Předpokládá se maximálně 254 budov a~255 místností. Je nezbytné, aby na každé posteli pacienta byl přítomný tag. Lokalizační tagy jsou malá elektronická zařízení, která zajišťují lokalizaci v~hlídaném prostoru. Tagy sbírají data z~IR kotev a~v případě potřeb vyšlou potřebná data. Data jsou vysílána v~případě změně místnosti, zmáčknutí tlačítka na tagu nebo po uplynutí pěti minut po vysílání. Tato data jsou následně přijímána přijímači a~webovým serverem, který tato data zpracuje a~následně uloží do databáze. Tato centrální databáze pak obsahuje všechny události, které byly zaznamenány tagem. Toto úložiště dat pak využívá široká škála aplikací, konfiguračních nástrojů i~budoucí statistické vyhodnocování. Obrázek a~část textu převzata z~\cite {RTLS}.\relax }{figure.caption.12}{}}
\citation{22}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Popis \IeC {\v r}e\IeC {\v s}en\IeC {\'\i }}{44}{subsection.3.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Use case diagram po prvn\IeC {\'\i } sch\IeC {\r u}zce.\relax }}{44}{figure.caption.13}}
\newlabel{fig:UCDiagram1}{{13}{44}{Use case diagram po první schůzce.\relax }{figure.caption.13}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces Fin\IeC {\'a}ln\IeC {\'\i } use case diagram.\relax }}{45}{figure.caption.14}}
\newlabel{fig:UCDIagram2}{{14}{45}{Finální use case diagram.\relax }{figure.caption.14}{}}
\citation{23}
\citation{21}
\citation{21}
\citation{21}
\newlabel{lst:ES6}{{15}{47}{ES6 kód využívající šipkového zápisu anonymní funkce}{lstlisting.15}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {15}ES6 k\IeC {\'o}d vyu\IeC {\v z}\IeC {\'\i }vaj\IeC {\'\i }c\IeC {\'\i } \IeC {\v s}ipkov\IeC {\'e}ho z\IeC {\'a}pisu anonymn\IeC {\'\i } funkce.}{47}{lstlisting.15}}
\newlabel{lst:afterBabel}{{16}{47}{ES6 kód po přeložení pomocí Babelu}{lstlisting.16}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {16}ES6 k\IeC {\'o}d po p\IeC {\v r}elo\IeC {\v z}en\IeC {\'\i } pomoc\IeC {\'\i } Babelu.}{47}{lstlisting.16}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces Funkcionalita Webpacku. P\IeC {\v r}evzato z~\cite  {21}.\relax }}{48}{figure.caption.15}}
\newlabel{fig:Webpack}{{15}{48}{Funkcionalita Webpacku. Převzato z~\cite {21}.\relax }{figure.caption.15}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {16}{\ignorespaces Redux diagram\relax }}{49}{figure.caption.16}}
\newlabel{fig:Redux}{{16}{49}{Redux diagram\relax }{figure.caption.16}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {17}Uk\IeC {\'a}zka inicializa\IeC {\v c}n\IeC {\'\i }ch dat v~reduceru pacienta.}{49}{lstlisting.17}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {18}Reducer funkce}{49}{lstlisting.18}}
\newlabel{lst:Bootstrap}{{19}{50}{Ukázka React Bootstrap}{lstlisting.19}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {19}Uk\IeC {\'a}zka React Bootstrap}{50}{lstlisting.19}}
\citation{20}
\citation{24}
\@writefile{lof}{\contentsline {figure}{\numberline {17}{\ignorespaces Rozvrstven\IeC {\'\i } aplikace podle S\#harp architektury a~uk\IeC {\'a}zka z\IeC {\'a}vislosti.\relax }}{53}{figure.caption.17}}
\newlabel{fig:sharpArch}{{17}{53}{Rozvrstvení aplikace podle S\#harp architektury a~ukázka závislosti.\relax }{figure.caption.17}{}}
\newlabel{lst:FluentNHibernate}{{20}{53}{Ukázka mapování pomocí FluentNHibernate}{lstlisting.20}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {20}Uk\IeC {\'a}zka mapov\IeC {\'a}n\IeC {\'\i } pomoc\IeC {\'\i } FluentNHibernate}{53}{lstlisting.20}}
\@writefile{lof}{\contentsline {figure}{\numberline {18}{\ignorespaces Sch\IeC {\'e}ma RTLS datab\IeC {\'a}ze.\relax }}{55}{figure.caption.18}}
\newlabel{fig:db}{{18}{55}{Schéma RTLS databáze.\relax }{figure.caption.18}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {19}{\ignorespaces Implementace backendu podle S\#harp architektury.\relax }}{56}{figure.caption.19}}
\newlabel{fig:WebAPISolution}{{19}{56}{Implementace backendu podle S\#harp architektury.\relax }{figure.caption.19}{}}
\newlabel{RF1}{57}
\@writefile{lof}{\contentsline {figure}{\numberline {20}{\ignorespaces Sekven\IeC {\v c}n\IeC {\'\i } diagram vytvo\IeC {\v r}en\IeC {\'\i } pacienta.\relax }}{57}{figure.caption.20}}
\newlabel{fig:SequenceDiagram}{{20}{57}{Sekvenční diagram vytvoření pacienta.\relax }{figure.caption.20}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Testov\IeC {\'a}n\IeC {\'\i }, nasazen\IeC {\'\i } a~zp\IeC {\v e}tn\IeC {\'a} vazba}{58}{subsection.3.3}}
\newlabel{lst:unitTests}{{21}{58}{Ukázka unit testů}{lstlisting.21}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {21}Uk\IeC {\'a}zka unit test\IeC {\r u}.}{58}{lstlisting.21}}
\newlabel{lst:integrationTest}{{22}{59}{Ukázka integračního testu}{lstlisting.22}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {22}Uk\IeC {\'a}zka integra\IeC {\v c}n\IeC {\'\i }ho testu.}{59}{lstlisting.22}}
\newlabel{lst:resetDB}{{23}{59}{Vrácení databáze do původního stavu}{lstlisting.23}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {23}Vr\IeC {\'a}cen\IeC {\'\i } datab\IeC {\'a}ze do p\IeC {\r u}vodn\IeC {\'\i }ho stavu.}{59}{lstlisting.23}}
\@writefile{lof}{\contentsline {figure}{\numberline {21}{\ignorespaces Ozn\IeC {\'a}men\IeC {\'\i } chyby.\relax }}{60}{figure.caption.21}}
\newlabel{fig:bugReport}{{21}{60}{Oznámení chyby.\relax }{figure.caption.21}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {22}{\ignorespaces Aplika\IeC {\v c}n\IeC {\'\i } pooly IIS.\relax }}{61}{figure.caption.22}}
\newlabel{fig:applicationPools}{{22}{61}{Aplikační pooly IIS.\relax }{figure.caption.22}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}N\IeC {\'a}stroje}{61}{subsection.3.4}}
\newlabel{sec:nastroje}{{3.4}{61}{Nástroje}{subsection.3.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Z\IeC {\'a}v\IeC {\v e}r}{63}{section.4}}
\@setckpt{Chapter03/chapter03}{
\setcounter{page}{64}
\setcounter{equation}{0}
\setcounter{enumi}{2}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{20}
\setcounter{mpfootnote}{0}
\setcounter{Dipl@CurrentThesisType}{2}
\setcounter{Dipl@CurrentThesisLanguage}{0}
\setcounter{Dipl@ThesisAssignmentImageCounter}{-1}
\setcounter{part}{0}
\setcounter{section}{4}
\setcounter{subsection}{0}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{22}
\setcounter{table}{0}
\setcounter{lstnumber}{9}
\setcounter{LT@tables}{1}
\setcounter{LT@chunks}{2}
\setcounter{r@tfl@t}{1}
\setcounter{Item}{14}
\setcounter{Hfootnote}{20}
\setcounter{bookmark@seq@number}{22}
\setcounter{definition}{0}
\setcounter{theorem}{0}
\setcounter{remark}{0}
\setcounter{Dipl@examplebody}{0}
\setcounter{figure@totc}{32}
\setcounter{table@totc}{0}
\setcounter{ContinuedFloat}{0}
\setcounter{KVtest}{0}
\setcounter{subfigure}{0}
\setcounter{subfigure@save}{0}
\setcounter{lofdepth}{1}
\setcounter{subtable}{0}
\setcounter{subtable@save}{0}
\setcounter{lotdepth}{1}
\setcounter{float@type}{8}
\setcounter{AlgoLine}{0}
\setcounter{algocfline}{0}
\setcounter{algocfproc}{0}
\setcounter{algocf}{0}
\setcounter{lstlisting}{23}
\setcounter{section@level}{0}
}
